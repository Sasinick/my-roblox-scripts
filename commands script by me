
local screengui = Instance.new("ScreenGui")
local textbox = Instance.new("TextBox")
local textbox2 = Instance.new("TextBox")
screengui.Name = "screengui"
screengui.Parent = game.Players.LocalPlayer.PlayerGui
screengui.ResetOnSpawn = false
textbox.Name = "textbox"
textbox.Parent = screengui
textbox.Position = UDim2.new(0, 800 , 0, 650)
textbox.Size = UDim2.new(0, 850 , 0, 150)
textbox2.Name = "textbox2"
textbox2.Parent = screengui
textbox2.Position = UDim2.new(0, 800 , 0, 800)
textbox2.Size = UDim2.new(0, 850 , 0, 150)

local UserInputService = game.UserInputService
UserInputService.InputBegan:Connect(function(input, gameProcessed)
if input.KeyCode == Enum.KeyCode.Semicolon then
textbox:CaptureFocus()
end
end)

textbox.FocusLost:Connect(function(enterPressed)
if enterPressed then 
local inputText = textbox.Text
local inputText2 = textbox2.Text
if inputText == ";fire" then
local fire = Instance.new("Fire")
fire.Heat = 20
fire.Size = 10
fire.Parent = game.Players.LocalPlayer.Character.HumanoidRootPart
end
if inputText == ";fly" then
local part = Instance.new("Part")
part.Name = "isdjif"
part.Anchored = true
part.CFrame = game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame + Vector3.new(0, -4, 0)
part.Parent = workspace
while true do
workspace.isdjif.CFrame = game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame + Vector3.new(0, -4, 0)
wait(0.1)
end
end
if inputText == ";unanchored part spawn" then
local part = Instance.new("Part")
part.Anchored = false
part.CFrame = game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame
part.Parent = workspace
end
if inputText == ";anchored part spawn" then
local part = Instance.new("Part")
part.Anchored = true
part.CFrame = game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame
part.Parent = workspace
end
if inputText == ";fire player" then
local fire = Instance.new("Fire")
fire.Heat = 20
fire.Size = 10
fire.Parent = game.Players[textbox2.Text].Character.HumanoidRootPart
end
if inputText == ";kick all" then
for _, a in pairs(game.Players:GetChildren()) do
a:Destroy()
end
end
if inputText == ";autorotate = false" then
game.Players.LocalPlayer.Character.Humanoid.AutoRotate = false
end
if inputText == ";autorotate = true" then
game.Players.LocalPlayer.Character.Humanoid.AutoRotate = true
end
if inputText == ";all part transparency = 0" then
for _, a in pairs(workspace:GetDescendants()) do
if a:IsA("BasePart") then
a.Transparency = 0
end
end
end
if inputText == ";all part transparency = 1" then
for _, a in pairs(workspace:GetDescendants()) do
if a:IsA("BasePart") then
a.Transparency = 1
end
end
end
if inputText == ";xray" then
for _, a in pairs(workspace:GetDescendants()) do
if a:IsA("BasePart") then
a.Transparency = 0.5
end
end
end
if inputText == ";respawn" then
local d = game.Players.LocalPlayer.Character:GetPivot()
local s = game.Players.RespawnTime
game.Players.LocalPlayer.Character.Humanoid.Health = 0
wait(s + 0.6)
game.Players.LocalPlayer.Character:PivotTo(d)
end
if inputText == ";end" then
game.Players.LocalPlayer.PlayerGui.screengui:Destroy()
end
if inputText == ";walkspeed" then
game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = inputText2
end
if inputText == ";jumppower" then
game.Players.LocalPlayer.Character.Humanoid.UseJumpPower = true
game.Players.LocalPlayer.Character.Humanoid.JumpPower = inputText2
end
if inputText == ";teleport to player" then
game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = game.Players[inputText2].Character.HumanoidRootPart.CFrame
end
if inputText == ";die" then
game.Players.LocalPlayer.Character.Humanoid.Health = 0
end
if inputText == ";sit" then
game.Players.LocalPlayer.Character.Humanoid.Sit = not game.Players.LocalPlayer.Character.Humanoid.Sit
end
if inputText == ";hipheight" then
game.Players.LocalPlayer.Character.Humanoid.HipHeight = inputText2
end
if inputText == ";jump" then
game.Players.LocalPlayer.Character.Humanoid:ChangeState('Jumping')
end
if inputText == ";teleport to part" then
for _, a in pairs(workspace:GetChildren()) do
if a:IsA("BasePart") then
game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = a.CFrame
end
end
end
if inputText == ";all part cancollide = false" then
for _, a in pairs(workspace:GetDescendants()) do
if a:IsA("BasePart") then
a.CanCollide = false
end
end
end
if inputText == ";all part cancollide = true" then
for _, a in pairs(workspace:GetDescendants()) do
if a:IsA("BasePart") then
a.CanCollide = true
end
end
end
if inputText == ";all part transparency" then
for _, a in pairs(workspace:GetDescendants()) do
if a:IsA("BasePart") then
a.Transparency = inputText2
end
end
end
if inputText == ";character freeze" then
game.Players.LocalPlayer.Character.HumanoidRootPart.Anchored = true
end
if inputText == ";uncharacter freeze" then
game.Players.LocalPlayer.Character.HumanoidRootPart.Anchored = false
end
if inputText == ";execute" then
loadstring(inputText2)()
end
if inputText == ";character freeze2" then
local bodyVelocity = Instance.new("BodyVelocity") bodyVelocity.MaxForce = Vector3.new(math.huge, math.huge, math.huge) bodyVelocity.Velocity = Vector3.new(0, 0, 0) bodyVelocity.Parent = game.Players.LocalPlayer.Character.HumanoidRootPart
end
if inputText == ";uncharacter freeze2" then
game.Players.LocalPlayer.Character.HumanoidRootPart.BodyVelocity:Destroy()
end
if inputText == ";teleport to random position" then
local x = math.random(-500,500)
local y = math.random(-500,500)
local z = math.random(-500,500)
game.Players.LocalPlayer.Character:PivotTo(CFrame.new(x,y,z))
end
if inputText == ";teleport to seat" then
for _, a in pairs(workspace:GetDescendants()) do
if a:IsA("Seat") then
game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = a.CFrame
end
end
end
if inputText == ";all tools equip" then
local n = game.Players.LocalPlayer.Name
for _, a in pairs(game.Players.LocalPlayer.Backpack:GetDescendants()) do
if a:IsA("Tool") then
a.Parent = workspace[n]
end
end
end
if inputText == ";noclip" then
for _, a in pairs(game.Players.LocalPlayer.Character:GetDescendants()) do
if a:IsA("BasePart") then
a.CanCollide = false
end
end
end
if inputText == ";click to teleport tool" then
mouse = game.Players.LocalPlayer:GetMouse()
tool = Instance.new("Tool")
tool.RequiresHandle = false
tool.Name = "click to teleport tool"
tool.Activated:Connect(function()
local pos = mouse.Hit+Vector3.new(0,2.5,0)
pos = CFrame.new(pos.X,pos.Y,pos.Z)
game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = pos
end)
tool.Parent = game.Players.LocalPlayer.Backpack
end
if inputText == ";animate freeze" then
game.Players.LocalPlayer.Character.Animate:Destroy()
end
if inputText == ";gravity" then
workspace.Gravity = inputText2
end
if inputText == ";view player" then
workspace.Camera.CameraSubject = game.Players[inputText2].Character.HumanoidRootPart
end
if inputText == ";loop teleport to player" then
while true do
task.wait(0.1)
game.Players.LocalPlayer.Character:PivotTo(game.Players[inputText2].Character:GetPivot())
end
end
if inputText == ";fencing get spray tool" then
local sprayposition = workspace.Handle.CFrame
local playerposition = game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame
game.Players.LocalPlayer.Character.Humanoid:ChangeState('Jumping')
task.wait(0.1)
game.Players.LocalPlayer.Character:PivotTo(playerposition)
workspace.Handle.CFrame = game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame + Vector3.new(0, 0.3, 0)
task.wait(0.1)
workspace.Handle.CFrame  = sprayposition
end
if inputText == ";fencing spray tool drop spam" then
local sprayposition = workspace.Handle.CFrame
local playername = game.Players.LocalPlayer.Name
local playerposition = game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame
while true do
if workspace[playername]:FindFirstChild("Spray") then
	workspace[playername].Spray.Parent = workspace
end
game.Players.LocalPlayer.Character.Humanoid:ChangeState('Jumping')
task.wait(0.1)
game.Players.LocalPlayer.Character:PivotTo(playerposition)
workspace.Handle.CFrame = game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame + Vector3.new(0.5, 0, 0)
task.wait(0.5)
workspace.Handle.CFrame  = sprayposition
task.wait(0.1)
workspace[playername].Spray.Parent = workspace
task.wait(0.1)
end
end
if inputText == ";free client script executor get spray tool" then
local spraypart = workspace.Fencing.SprayButton
local gravity = workspace.Gravity
local characterposition = game.Players.LocalPlayer.Character:GetPivot()
workspace.Gravity = 500
game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = spraypart.CFrame + Vector3.new(0, 5, 0)
task.wait(0.4)
game.Players.LocalPlayer.Character:PivotTo(characterposition)
workspace.Gravity = gravity
end
if inputText == ";free client script executor spray tool drop spam" then
local spraypart = workspace.Fencing.SprayButton
local playername = game.Players.LocalPlayer.Name
while true do
local characterposition = game.Players.LocalPlayer.Character:GetPivot()
game.Players.LocalPlayer.Character:PivotTo(spraypart.CFrame + Vector3.new(0, 0.3, 0))
task.wait(0.9)
game.Players.LocalPlayer.Character:PivotTo(characterposition)
task.wait(0.1)
workspace[playername]["Spray"].Parent = workspace
end
end
if inputText == ";if sit then jump" then
while true do
task.wait(0.1)
if game.Players.LocalPlayer.Character.Humanoid.Sit == true then
game.Players.LocalPlayer.Character.Humanoid:ChangeState('Jumping')
end
end
end
if inputText == ";teleport to drop tool" then
for _, droptool in pairs(workspace:GetChildren()) do
if droptool:IsA("Tool") then
game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = droptool.Handle.CFrame
end
end
end
end
end)
