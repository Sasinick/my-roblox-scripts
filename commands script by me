
local screengui = Instance.new("ScreenGui")
local textbox = Instance.new("TextBox")
local textbox2 = Instance.new("TextBox")
screengui.Name = "screengui"
screengui.Parent = game.Players.LocalPlayer.PlayerGui
screengui.ResetOnSpawn = false
textbox.Name = "textbox"
textbox.Parent = screengui
textbox.Position = UDim2.new(0, 800 , 0, 650)
textbox.Size = UDim2.new(0, 850 , 0, 150)
textbox2.Name = "textbox2"
textbox2.Parent = screengui
textbox2.Position = UDim2.new(0, 800 , 0, 800)
textbox2.Size = UDim2.new(0, 850 , 0, 150)

local UserInputService = game.UserInputService
UserInputService.InputBegan:Connect(function(input, gameProcessed)
if input.KeyCode == Enum.KeyCode.Semicolon then
textbox:CaptureFocus()
end
end)

textbox.FocusLost:Connect(function(enterPressed)
if enterPressed then 
local inputText = textbox.Text
local inputText2 = textbox2.Text
if inputText == ";fire" then
local fire = Instance.new("Fire")
fire.Heat = 20
fire.Size = 10
fire.Parent = game.Players.LocalPlayer.Character.HumanoidRootPart
end
if inputText == ";fly" then
local part = Instance.new("Part")
part.Name = "isdjif"
part.Anchored = true
part.CFrame = game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame + Vector3.new(0, -4, 0)
part.Parent = workspace
while true do
workspace.isdjif.CFrame = game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame + Vector3.new(0, -4, 0)
wait(0.1)
end
end
if inputText == ";unanchored part spawn" then
local part = Instance.new("Part")
part.Anchored = false
part.CFrame = game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame
part.Parent = workspace
end
if inputText == ";anchored part spawn" then
local part = Instance.new("Part")
part.Anchored = true
part.CFrame = game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame
part.Parent = workspace
end
if inputText == ";fire player" then
local fire = Instance.new("Fire")
fire.Heat = 20
fire.Size = 10
fire.Parent = game.Players[textbox2.Text].Character.HumanoidRootPart
end
if inputText == ";kick all" then
for _, a in pairs(game.Players:GetChildren()) do
a:Destroy()
end
end
if inputText == ";animate delete" then
game.Players.LocalPlayer.Character.Animate:Destroy()
end
if inputText == ";autorotate = false" then
game.Players.LocalPlayer.Character.Humanoid.AutoRotate = false
end
if inputText == ";autorotate = true" then
game.Players.LocalPlayer.Character.Humanoid.AutoRotate = true
end
if inputText == ";all part transparency = 0" then
for _, a in pairs(workspace:GetDescendants()) do
if a:IsA("BasePart") then
a.Transparency = 0
end
end
end
if inputText == ";all part transparency = 1" then
for _, a in pairs(workspace:GetDescendants()) do
if a:IsA("BasePart") then
a.Transparency = 1
end
end
end
if inputText == ";xray" then
for _, a in pairs(workspace:GetDescendants()) do
if a:IsA("BasePart") then
a.Transparency = 0.5
end
end
end
if inputText == ";save pos and die and load pos" then
local d = game.Players.LocalPlayer.Character:GetPivot()
local s = game.Players.RespawnTime
game.Players.LocalPlayer.Character.Humanoid.Health = 0
wait(s + 0.5)
game.Players.LocalPlayer.Character:PivotTo(d)
end
if inputText == ";end" then
game.Players.LocalPlayer.PlayerGui.screengui:Destroy()
end
if inputText == ";walkspeed" then
game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = inputText2
end
if inputText == ";jumppower" then
game.Players.LocalPlayer.Character.Humanoid.UseJumpPower = true
game.Players.LocalPlayer.Character.Humanoid.JumpPower = inputText2
end
if inputText == ";teleport to player" then
game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = game.Players[inputText2].Character.HumanoidRootPart.CFrame
end
if inputText == ";die" then
game.Players.LocalPlayer.Character.Humanoid.Health = 0
end
end
end)
